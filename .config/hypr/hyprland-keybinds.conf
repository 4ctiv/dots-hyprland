# ##########################################################################
#  ##########################################################################
#   ###    Hotkeys, Keybindings, etc. for hyprland                         ###
#  ##########################################################################
# ##########################################################################

# ########################
# # Flag # Description   # Syntax: bind[FLAG] = (...,)*                                      
# ###########################################################################################
# # l    # locked        # works also when in input inhibitor (e.g. lockscreen) is active   #
# # r    # release       # will trigger on release of a key.                                #
# # e    # repeat        # will repeat when held.1                                          #
# # n    # non-consuming # key/mouse events, passed to active window and triggers dispatcher#
# # m    # mouse         # see below                                                        #
# # t    # transparent   # cannot be shadowed by other binds                                #
# ###########################################################################################
# # Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# # NOTE: [ALT]=ALT ; [CTRL]=CTRL ; [ENTER]=RETURN ; [SHIFT]=SHIFT ; [WIN]=SUPER
# # NOTE: 'exec-once' to launch applications / daemons on boot
# #       'exec'      to launch applications           on reload
# #       'bind'      hotkey assignment
# #       'env'       set environment variable (different syntax than 'env' in UNIX)

# Note: How to launch programs and install them when they are not installed currently
#  - which PROGRAM && INSTALLED || INSTALL
#  - which PROGRAM || INSTALL ; RUN

# Note: Launch programs with dispatchers via hyprctl `[displatcher;...] program args`
# ... , exec, [workspace special; silent; rounding 3;opacity 0.7;float;noanim;pin;move 1% 43px;size 98% 300px;focus 1] $term

#   #############
#  # Pre Setup #
# #############

# Directories
$localBin = $HOME/.local/bin
$scriptsDir = $HOME/.config/hypr/scripts
$hyprDir = $HOME/.config/hypr
$qemuDir = '~/.vm/quickemu/'
$screenshotDir = '200_Photo/240 Screenshots/'  # Note this path is relative to $~/$

# Scripts
$brightness  = $scriptsDir/brightness
$menu        = $scriptsDir/menu   
$fullmenu    = $scriptsDir/fullmenu
$volume      = $scriptsDir/volume
$backlight   = $scriptsDir/brightness
$screenshot  = cd "$screenshotDir"; flameshot gui
$lock        = $scriptsDir/lockscreen
$colorpicker = $scriptsDir/colorpicker
$wofi_beats  = $scriptsDir/wofi-beats
$gamemode    = $scriptsDir/gamemode
$statusbar   = $scriptsDir/statusbar
$kill_active = $scriptsDir/kill-active
$scratchpad  = $scriptsDir/scratchpad
# Apps
$audio       = spotify                      # Cecilia5, Mixxx, Ardour
$photo       = gimp                         # inkscape, krita, feh
$video       = shotcut                      # mpv, davinci-resolve, kdenlive
$browser     = brave                        # firefox, (google-)chrome(-stable)
$editor      = vim                          # nano, vi
$files       = cosmic-files                 # thunar, nautilus, dolphin
$mail        = [workspace:mail] thunderbird # mailsptring, bluemail
$messanger   = element-desktop              # whatsapp-web, telegram-desktop, irc
$office      = onlyoffice-desktopeditor     # libre-office
$term        = kitty
$keyboard    = pidof wvkbd-mobintl && pkill wvkbd-mobintl || wvkbd-mobintl -L 300

# Hotkeys
$mainMod     = SUPER
$CTRL        = STRG

#   ###########
#  # Hotkeys #
# ###########

# [WIN] + [Function keys]
 # Stack 1: basic tools
 bind = $mainMod           , F1          , exec, kitty $scriptsDir/show-keybinds
 bind = $mainMod           , F2          , exec, $files
 bind = $mainMod           , F3          , exec, $editor
 bind = $mainMod           , F4          , exec, $browser
 # Stack 2: Communication
 bind = $mainMod           , F5          , exec, $mail
 bind = $mainMod           , F6          , exec, $messanger
 bind = $mainMod           , F7          , exec, $office
 bind = $mainMod           , F8          , exec, gromit-mpx --undo
 bind = $mainMod SHIFT     , F8          , exec, gromit-mpx --redo
 # Stack 3: Micilanious
 bind = $mainMod           , F9          , exec, $audio
 bind = $mainMod           , F10         , exec, $photo
 bind = $mainMod           , F11         , exec, $video
 bind = $mainMod           , F12         , exec, $keyboard

# Launch VM's using quickemu (Arch dep's: quemu, qemu-desktop, quickgui) numpad see: https://www.reddit.com/r/hyprland/comments/11zy9tj/binding_numpad_keys_to_switch_workspaces/
# NOTE: VM's have to be installed in the given directory by running 'quickget VM_NAME VM_VESRION' e.g.: 'quickget ubuntu 22.04'
# NOTE: KP_... (number-pad *) only active when 'numlock_by_default = true'
#bind = $mainMod           , KP_Insert   , exec, notify-send "Starting _______ VM ..." && cd $qemuDir && ( [[ ! -f "manjaro-budgie.conf" ]] && $term quickget ___________ _____   || notify-send "Config found" ) && quickemu --display spice --vm ________-____.conf          #NumPad0
 bind = $mainMod           , KP_End      , exec, notify-send "Starting Ubuntu  VM ..." && cd $qemuDir && ( [[ ! -d "ubuntu-24.04"        ]] && $term quickget ubuntu 24.04        || notify-send "Config found" ) && quickemu --display spice --vm ubuntu-24.04.conf #NumPad1
 bind = $mainMod           , KP_Down     , exec, notify-send "Starting MacOs   VM ..." && cd $qemuDir && ( [[ ! -d "macos-sonoma"        ]] && $term quickget macos sonoma        || notify-send "Config found" ) && quickemu --display spice --vm macos-sonoma.conf           #NumPad2
 bind = $mainMod           , KP_Next     , exec, notify-send "Starting Windows VM ..." && cd $qemuDir && ( [[ ! -d "windows-10"          ]] && $term quickget windows 10          || notify-send "Config found" ) && quickemu --display spice --vm windows-10.conf        #Numpad3
 bind = $mainMod           , KP_Left     , exec, notify-send "Starting Android VM ..." && cd $qemuDir && ( [[ ! -d "android-9.0-x86_64"  ]] && $term quickget android 9.0 x86_64  || notify-send "Config found" ) && quickemu --display spice --vm ubuntu-daily-live.conf      #NumPad4
 bind = $mainMod           , KP_Begin    , exec, quickgui                          #NumPad5
 bind = $mainMod           , KP_Right    , exec, notify-send "Starting Arch    VM ..." && cd $qemuDir && ( [[ ! -d "archlinux-latest"    ]] && $term quickget archlinux latest    || notify-send "Config found" ) && quickemu --display spice --vm archlinux-latest.conf  #NumPad6 
#bind = $mainMod           , KP_UP       , exec, notify-send "Starting Parrot  VM ..." && cd $qemuDir && ( [[ ! -d "parrotsec-security"  ]] && $term quickget parrotsec 6.1 security || notify-send "Config found" ) && quickemu --display spice --vm kali-current.conf           #NumPad7
#bind = $mainMod           , KP_Home     , exec, notify-send "Starting Arch    VM ..." && cd $qemuDir && ( [[ ! -d "archlinux-latest"    ]] && $term quickget archlinux latest    || notify-send "Config found" ) && quickemu --display spice --vm archlinux-latest.conf       #NumPad8
#bind = $mainMod           , KP_Prior    , exec, notify-send "Starting NixOS   VM ..." && cd $qemuDir && ( [[ ! -d "nixos-23.11-minimal" ]] && $term quickget nixos 23.11 minimal || notify-send "Config found" ) && quickemu --display spice --vm nixos-23.11-minimal.conf    #NumPad9 ;9u

# [WIN]
 bind = $mainMod           , Return      , exec, $term
 bind = $mainMod           , Space       , togglefloating
 bind = $mainMod           , A           , exec, pavucontrol
 bind = $mainMod           , B           , exec, blueman-manager
 bind = $mainMod           , C           , exec, hyprctl dispatch centerwindow
 bind = $mainMod           , D           , exec, $scriptsDir/changeLayout
 bind = $mainMod           , E           , exec, $files
 bind = $mainMod           , F           , fullscreen
 bind = $mainMod           , S           , togglegroup  # Stack windows
 bind = $mainMod           , I           , exec, notify-send "Window info" "$(echo -e "$(hyprctl activewindow -j | jq -r '"\(.title) [\(.class)] \\n PID: \(.pid); WS: \(.workspace.name) [\(.workspace.id)]"')")"
 bind = $mainMod           , K           , exec, showmethekey-gtk || (kitty sh -c 'yay -S showmethekey' && showmethekey-gtk)
 bind = $mainMod           , M           , exec, notify-send "Monitor info" "$(echo -e "$(hyprctl monitors -j | jq '.[] | "Monitor: \(.name)[\(.id)]@\(.activeWorkspace.name)[\(.activeWorkspace.id)] \\n Resolution: \(.width)x\(.height)@\(.refreshRate | floor ) (\(.scale))"')")"
 bind = $mainMod           , N           , exec, $files
 bind = $mainMod           , O           , exec, obsidian || (kitty sh -c 'yay -S obsidian' && obsidian)
 bind = $mainMod           , P           , pin
 bind = $mainMod           , Q           , exec, $kill_active
 bind = $mainMod           , R           , exec, $wofi_beats
 bind = $mainMod           , T           , exec, $scriptsDir/toggle_touch
 bind = $mainMod           , V           , exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy
 bind = $mainMod           , Y           , exec, $fullmenu

# [Win] + [SHIFT]
 bind = $mainMod SHIFT     , Escape      , exec, $term --class bashtop -T bashtop -e bashtop
 bind = $mainMod SHIFT     , Space       , togglefloating
 bind = $mainMod SHIFT     , A           , exec, killall easyeffects && easyeffects
 bind = $mainMod SHIFT     , C           , exec, $colorpicker
 bind = $mainMod SHIFT     , E           , exec, $files
 bind = $mainMod SHIFT     , Q           , killactive
 bind = $mainMod SHIFT     , Y           , exec, $term --class clock -T clock -e tty-clock -c -C 7 -r -s -f "%A, %B, %d"

# [WIN] + [CTRL]
 bind = $mainMod CTRL      , Space       , exec, $scriptsDir/changeLayout
 bind = $mainMod CTRL      , A           , exec, $term --class cava -T cava -e cava # equalizer
 bind = $mainMod CTRL      , B           , exec, $term --class bonsai -T bonsai -e bash -c 'while true; do cbonsai -S -l; sleep 1s; done' # animation
 bind = $mainMod CTRL      , C           , exec, $term --class clock -T clock -e tty-clock -c -C 7 -r -s -f "%A, %B, %d"
 bind = $mainMod CTRL      , F           , fullscreenstate, 0, 2  # fakefullscreen
 bind = $mainMod CTRL      , L           , exec, $lock
 bind = $mainMod CTRL      , P           , exec, pin
 bind = $mainMod CTRL      , Q           , exec, wlogout # archlinux-logout
 bind = $mainMod CTRL      , S           , exec, exec hyprctl dispatch movewindoworgroup r
 bind = $mainMod CTRL      , V           , exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# [WIN] + [ALT]
 bind = $mainMod ALT       , A           , exec, which noisetorch || kitty sh -c "yay -S noisetorch"; noisetorch -i -o; noisetorch
 bind = $mainMod ALT       , F           , exec, $statusbar
 bind = $mainMod ALT       , G           , exec, $gamemode
 bind = $mainMod ALT       , L           , exec, $lock
 bind = $mainMod ALT       , V           , exec, cliphist list | wofi --dmenu | cliphist decode | wl-copy

# [CTRL] + [ALT] (Core Software)
 bind = CTRL ALT           , A          , exec, $audio                   || (kitty sh -c "yay -S $audio" && $audio)
 bind = CTRL ALT           , B          , exec, which $browser           ||  kitty sh -c "yay -S $browser"; $browser  # Alternative launch method
 bind = CTRL ALT           , E          , exec, $editor                  || (kitty sh -c "yay -S $editor" && $editor)
 bind = CTRL ALT           , F          , exec, $files                   || (kitty sh -c "yay -S $files" && $files)
 bind = CTRL ALT           , M          , exec, $mail                    || (kitty sh -c "yay -S $mail" && $mail)
 bind = CTRL ALT           , O          , exec, $office                  || (kitty sh -c "yay -S $office" && $office)
 bind = CTRL ALT           , P          , exec, pamac-manager            || (kitty sh -c 'yay -S pamac-aur' && pamac-manager)
 bind = CTRL ALT           , T          , exec, htop                     || (kitty sh -c 'yay -S htop' && htop)
 bind = CTRL ALT           , V          , exec, $video                   || (kitty sh -c "yay -S $video" && $video)
 # Backlight control (supported screens only)
 binde= CTRL ALT       , Up                   , exec, brightnessctl s 5%+
 binde= CTRL ALT       , Down                 , exec, brightnessctl s 5%-
 binde= CTRL ALT       , Right                , exec, $volume --inc
 binde= CTRL ALT       , Left                 , exec, $volume --dec

# [Win] + [CTRL] + [SHIFT] (For things that do not be pressed exedentally)
 bind = $mainMod CTRL SHIFT, Escape     , exec, hyprctl reload

# WINDOWS BINDS
 bind = ALT                , F4          , exec, kill -9 $(hyprctl activewindow -j | jq '.pid')
 bind = CTRL ALT           , Delete      , exec, $term htop
 bind = CTRL SHIFT         , Escape      , exec, $term htop

# Screenshot keybindings
 bind = $mainMod           , Print       , exec, $screenshot
 bind = $mainMod SHIFT     , S           , exec, $screenshot

#   ##################################
#  ## Window & Workspace controll ###
# ##################################

# Workspace cycle
 bind = $mainMod           , tab         , exec, hyprctl dispatch changegroupactive f
 bind = $mainMod SHIFT     , tab         , exec, hyprctl dispatch changegroupactive b
 bind = $mainMod ALT       , left        , workspace, -1
 bind = $mainMod ALT       , right       , workspace, +1
 bind = ALT                , tab         , workspace, m+1
 bind = ALT SHIFT          , tab         , workspace, m-1

# "Scratchpad" Workspace (Quick window overlay)
 bind = $mainMod           , W           , togglespecialworkspace,
 bind = $mainMod SHIFT     , W           , exec, hyprctl dispatch setfloating
 bind = $mainMod SHIFT     , W           , movetoworkspace, special

# "Hide" Workspace (Toggle window hide)
 bind = $mainMod           , H           , togglespecialworkspace, minimize
 bind = $mainMod           , H           , movetoworkspace, +0
 bind = $mainMod           , H           , togglespecialworkspace, minimize
 bind = $mainMod           , H           , movetoworkspace, special:minimize
 bind = $mainMod           , H           , togglespecialworkspace, minimize

# "Screen Anotation" Woorkspace (Draw on screen)
#  Note: Keybinds will modify gromit even if not in front
 bind = $mainMod           , G           , togglespecialworkspace, draw
 bind = CTRL SHIFT         , Z           , exec, gromit-mpx --undo
 bind = CTRL SHIFT         , R           , exec, gromit-mpx --redo

# Master Stack
 bind = $mainMod CTRL      , Return      , layoutmsg, swapwithmaster
 bind = $mainMod CTRL      , M           , layoutmsg, addmaster
 bind = $mainMod CTRL      , N           , layoutmsg, removemaster

# Focus window
 bind = $mainMod           , up          , movefocus, u
 bind = $mainMod           , down        , movefocus, d
 bind = $mainMod           , left        , movefocus, l
 bind = $mainMod           , right       , movefocus, r

# Switch workspaces [WIN] + [0-9]
 bind = $mainMod           , -           , workspace, -1
 bind = $mainMod           , 1           , workspace, 1
 bind = $mainMod           , 2           , workspace, 2
 bind = $mainMod           , 3           , workspace, 3
 bind = $mainMod           , 4           , workspace, 4
 bind = $mainMod           , 5           , workspace, 5
 bind = $mainMod           , 6           , workspace, 6
 bind = $mainMod           , 7           , workspace, 7
 bind = $mainMod           , 8           , workspace, 8
 bind = $mainMod           , 9           , workspace, 9
 bind = $mainMod           , +           , workspace, +1

# Move active window and follow to workspace
 bind = $mainMod CTRL      , -           , movetoworkspace, -1
 bind = $mainMod CTRL      , 1           , movetoworkspace, 1
 bind = $mainMod CTRL      , 2           , movetoworkspace, 2
 bind = $mainMod CTRL      , 3           , movetoworkspace, 3
 bind = $mainMod CTRL      , 4           , movetoworkspace, 4
 bind = $mainMod CTRL      , 5           , movetoworkspace, 5
 bind = $mainMod CTRL      , 6           , movetoworkspace, 6
 bind = $mainMod CTRL      , 7           , movetoworkspace, 7
 bind = $mainMod CTRL      , 8           , movetoworkspace, 8
 bind = $mainMod CTRL      , 9           , movetoworkspace, 9
 bind = $mainMod CTRL      , +           , movetoworkspace, +1

# Move window
 bind = $mainMod CTRL      , left        , movewindow, l
 bind = $mainMod CTRL      , down        , movewindow, d
 bind = $mainMod CTRL      , up          , movewindow, u
 bind = $mainMod CTRL      , right       , movewindow, r

# Move active window to a workspace with mainMod + SHIFT + [0-9]
 bind = $mainMod SHIFT     , -           , movetoworkspacesilent, -1
 bind = $mainMod SHIFT     , 1           , movetoworkspacesilent, 1
 bind = $mainMod SHIFT     , 2           , movetoworkspacesilent, 2
 bind = $mainMod SHIFT     , 3           , movetoworkspacesilent, 3
 bind = $mainMod SHIFT     , 4           , movetoworkspacesilent, 4
 bind = $mainMod SHIFT     , 5           , movetoworkspacesilent, 5
 bind = $mainMod SHIFT     , 6           , movetoworkspacesilent, 6
 bind = $mainMod SHIFT     , 7           , movetoworkspacesilent, 7
 bind = $mainMod SHIFT     , 8           , movetoworkspacesilent, 8
 bind = $mainMod SHIFT     , 9           , movetoworkspacesilent, 9
 bind = $mainMod SHIFT     , +           , movetoworkspacesilent, +1

# Resize window
 binde = $mainMod SHIFT    , up          , resizeactive,0 -50
 binde = $mainMod SHIFT    , down        , resizeactive,0 50
 binde = $mainMod SHIFT    , left        , resizeactive,-50 0
 binde = $mainMod SHIFT    , right       , resizeactive,50 0

# Vim-like Keybindings
#bind = $mainMod           , H           , movefocus, l #layoutmsg, cyclenext
#bind = $mainMod           , J           , movefocus, u #layoutmsg, cyclenext
#bind = $mainMod           , K           , movefocus, d #layoutmsg, cycleprev
#bind = $mainMod           , L           , movefocus, r #layoutmsg, cycleprev
#bind = $mainMod CTRL      , H           , movewindow, l
#bind = $mainMod CTRL      , J           , movewindow, d
#bind = $mainMod CTRL      , K           , movewindow, u
#bind = $mainMod CTRL      , L           , movewindow, r
#bind = $mainMod SHIFT     , H           , resizeactive,-50 0
#bind = $mainMod SHIFT     , J           , resizeactive,0 50
#bind = $mainMod SHIFT     , K           , resizeactive,0 -50
#bind = $mainMod SHIFT     , L           , resizeactive,50 0

#   #####################
#  # Special controlls #
# #####################

# Audio controlls
 bind =                    , xf86audiomute        , exec, $volume --toggle
 bind =                    , xf86audioraisevolume , exec, $volume --inc
 bind =                    , xf86audiolowervolume , exec, $volume --dec
 bind =                    , xf86audioplay        , exec, playerctl play-pause
 bind =                    , xf86audiostop        , exec, playerctl stop
 bind =                    , xf86audionext        , exec, playerctl next
 bind =                    , xf86audioprev        , exec, playerctl previous
 
# Display controlls
 bind   =                  , xf86monbrightnessup  , exec, $brightness --inc
 bind   =                  , xf86monbrightnessdown, exec, $brightness --dec
 bind   = $mainMod SHIFT   , equal                , submap, backlight
 submap = backlight
 bind   =                  , equal                , exec, $backlight --inc
 bind   =                  , minus                , exec, $backlight --dec
 bind   =                  , escape               , submap, reset
 submap = reset

# Volume control
 bind   = $mainMod         , equal                , submap, volume
 submap = volume
 bind   =                  , equal                , exec, $volume --inc
 bind   =                  , minus                , exec, $volume --dec
 bind   =                  , 0                    , exec, $volume --toggle
 bind   =                  , 9                    , exec, $volume --toggle-mic
 bind   =                  , escape               , submap, reset
 submap = reset

#   ###################
#  # Mouse controlls #
# ###################

# Scroll through existing workspaces
 bind = $mainMod           , mouse_down  , workspace, e+1
 bind = $mainMod           , mouse_up    , workspace, e-1
 bind = $mainMod           , period      , workspace, e+1
 bind = $mainMod           , comma       , workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
 bindm = $mainMod          , mouse:272   , movewindow
 bindm = $mainMod          , mouse:273   , resizewindow

#   ###################
#  # Other controlls #
# ###################

